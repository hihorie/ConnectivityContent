{
	"swagger": "2.0",
	"info": {
		"title": "Promo API",
		"version": "1",
		"description": "The Promo API allows you to read, create and update promotions via API calls."
	},
	"host": "services.expediapartnercentral.com",
	"basePath": "/promotions",
	"tags": [
		{
			"name": "Promo"
		}
	],
	"schemes": [
		"https"
	],
	"security": [
		""
	],
	"securityDefinitions": {
		"eps-security": {
			"type": "basic"
		}
	},
	"paths": {
		"/v1/hotels/{hotelID}/promos": {
			"get": {
				"tags": [
					"Promo"
				],
				"produces": [
					"application/json"
				],
				"operationId": "getAllPromotionsForHotel",
				"summary": "Get all promos for a hotel.",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Basic RVFDdGVzdDEyOTMzODcwOmtoOTJuZDI5"
					}, {
						"in": "path",
						"description": "The Id of the hotel to retrieve promotions for.",
						"name": "hotelID",
						"required": true,
						"type": "integer",
						"default": "12933870"
					}, {
						"name": "returnScore",
						"in": "query",
						"description": "If specified, will add a score element to the promo payload, indicating strenght of the promotion. Optional, false by default.",
						"required": false,
						"type": "boolean",
						"default": false
					}, {
						"name": "activeOnly",
						"in": "query",
						"description": "If specified to true, will only return active promotions. Optional, false by default.",
						"required": false,
						"type": "boolean",
						"default": false
					}
				],
				"responses": {
					"200": {
						"description": "Success request",
						"schema": {
							"$ref": "#/definitions/PromoRS"
						}
					},
					"400": {
						"description": "Parsing error/content validation error and the other client side error. Error code range: (2000, 3999)"
					},
					"401": {
						"description": "Authentication error. Error code range: (1000, 1099)"
					},
					"403": {
						"description": "Authorization error. Error code range: (1100, 1999)"
					},
					"500": {
						"description": "System error. Error code range: (4000, 9999)"
					}
				}
			},
			"post": {
				"tags": [
					"Promo"
				],
				"produces": [
					"application/json"
				],
				"operationId": "createPromo",
				"summary": "Create promo for given hotel.",
				"consumes": [
					"application/json"
				],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Basic RVFDdGVzdDEyOTMzODcwOmtoOTJuZDI5"
					}, {
						"in": "body",
						"description": "Promo object that is to be created. It support status update with promo id in this version. Required fields: promo id, status.",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PromoType"
						}
					}, {
						"in": "path",
						"description": "The Id of the hotel to create the promotions for.",
						"name": "hotelID",
						"required": true,
						"type": "integer",
						"default": "12933870"
					}
				],
				"responses": {
					"200": {
						"description": "Success request",
						"schema": {
							"$ref": "#/definitions/PromoRS"
						}
					},
					"400": {
						"description": "Parsing error/content validation error and the other client side error. Error code range: (2000, 3999)"
					},
					"401": {
						"description": "Authentication error. Error code range: (1000, 1099)"
					},
					"403": {
						"description": "Authorization error. Error code range: (1100, 1999)"
					},
					"500": {
						"description": "System error. Error code range: (4000, 9999)"
					}
				}
			}
		},
		"/v1/hotels/{hotelID}/promos/{promoID}": {
			"get": {
				"tags": [
					"Promo"
				],
				"produces": [
					"application/json"
				],
				"operationId": "getPromoById",
				"summary": "Get promo details",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Basic RVFDdGVzdDEyOTMzODcwOmtoOTJuZDI5"
					}, {
						"in": "path",
						"description": "The Id of the hotel to retrieve promotions for.",
						"name": "hotelID",
						"required": true,
						"type": "integer",
						"default": "12933870"
					}, {
						"in": "path",
						"description": "The Id of the promo to retrieve",
						"name": "promoID",
						"required": true,
						"type": "integer",
						"default": "218624869"
					}, {
						"name": "returnScore",
						"in": "query",
						"description": "If specified, will add a score element to the promo payload, indicating strenght of the promotion. Optional, false by default.",
						"required": false,
						"type": "boolean",
						"default": false
					}, {
						"name": "activeOnly",
						"in": "query",
						"description": "If specified to true, will only return active promotions. Optional, false by default.",
						"required": false,
						"type": "boolean",
						"default": false
					}
				],
				"responses": {
					"200": {
						"description": "Success request",
						"schema": {
							"$ref": "#/definitions/PromoRS"
						}
					},
					"400": {
						"description": "Parsing error/content validation error and the other client side error. Error code range: (2000, 3999)"
					},
					"401": {
						"description": "Authentication error. Error code range: (1000, 1099)"
					},
					"403": {
						"description": "Authorization error. Error code range: (1100, 1999)"
					},
					"500": {
						"description": "System error. Error code range: (4000, 9999)"
					}
				}
			},
			"put": {
				"tags": [
					"Promo"
				],
				"produces": [
					"application/json"
				],
				"operationId": "updatePromo",
				"summary": "Update promo",
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Basic RVFDdGVzdDEyOTMzODcwOmtoOTJuZDI5"
					}, {
						"in": "body",
						"description": "Promo object that needs to be updated. It support status update with promo id in this version. Required fields: promo id, status.",
						"name": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PromoType"
						}
					}, {
						"in": "path",
						"description": "The Id of the hotel to retrieve promotions for.",
						"name": "hotelID",
						"required": true,
						"type": "integer",
						"default": "12933870"
					}, {
						"in": "path",
						"description": "The Id of the promo to retrieve",
						"name": "promoID",
						"required": true,
						"type": "integer",
						"default": "218624869"
					}
				],
				"responses": {
					"200": {
						"description": "Success request",
						"schema": {
							"$ref": "#/definitions/PromoRS"
						}
					},
					"400": {
						"description": "Parsing error/content validation error and the other client side error. Error code range: (2000, 3999)"
					},
					"401": {
						"description": "Authentication error. Error code range: (1000, 1099)"
					},
					"403": {
						"description": "Authorization error. Error code range: (1100, 1999)"
					},
					"500": {
						"description": "System error. Error code range: (4000, 9999)"
					}
				}
			}
		}
	},
	"definitions": {
		"ErrorType": {
			"required": [
				"code", "message"
			],
			"properties": {
				"code": {
					"type": "integer",
					"format": "int32",
					"description": "Error code, range (1000, 9999)"
				},
				"message": {
					"type": "string",
					"description": "Error message"
				},
				"promoId": {
					"type": "integer",
					"format": "int32",
					"description": "The unique identifier for the promo."
				},
				"link": {
					"type": "string",
					"description": "The link for the additional information related to this error"
				}
			}
		},
		"TravelDateBlackout": {
			"required": [
				"start", "end"
			],
			"properties": {
				"start": {
					"type": "string",
					"description": "Data format: xs:date"
				},
				"end": {
					"type": "string",
					"description": "Data format: xs:date"
				}
			}
		},
		"PromoType": {
			"required": [
				"RatePlan",
				"name",
				"travelDateStart",
				"travelDateEnd",
				"bookDateTimeStart",
				"bookDateTimeEnd",
				"percent",
				"minLOS"
			],
			"properties": {
				"RatePlan": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/RatePlan"
					},
					"description": "Derived rate plan IDs should never be provided, as the promotion will always be attached to the parent. If a derived rate plan is provided, the promo will be created on the parent. If the same promo already exists on the parent, it will return an error."
				},
				"TravelDateBlackout": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/TravelDateBlackout"
					}
				},
				"id": {
					"type": "integer",
					"format": "int32",
					"description": "Promo ID. Unique identifier generated by the promo service for each promo."
				},
				"name": {
					"type": "string",
					"description": "Promo name. Max 80 characters."
				},
				"status": {
					"type": "string",
					"enum": [
						"Active", "Inactive"
					],
					"description": "Promo status. Active or Inactive."
				},
				"travelDateStart": {
					"type": "string",
					"description": "The travel start date during which the Promotion is in effect. Format YYYY-MM-DD (e.g. 2014-09-16)."
				},
				"travelDateEnd": {
					"type": "string",
					"description": "The travel end date during which the Promotion is in effect. Format YYYY-MM-DD (e.g. 2014-12-31)."
				},
				"bookDateTimeStart": {
					"type": "string",
					"description": "The start date and time when this promotion becomes available for booking. Format YYYY-MM-DDThh:mm:ss (e.g. 2014-09-16T00:00:00). No timezone information can be provided, it will always be relative to the property's configured timezone in Expedia system."
				},
				"bookDateTimeEnd": {
					"type": "string",
					"description": "The end date and time when this promotion is no longer available for booking. Format YYYY-MM-DDThh:mm:ss (e.g. 2014-09-30T11:59:00). No timezone information can be provided, it will always be relative to the property's configured timezone in Expedia system."
				},
				"percent": {
					"type": "integer",
					"format": "int32",
					"minimum": 10,
					"maximum": 75,
					"description": "The discount(percentage) applies to all nights of the guest's stay. The range must be between 10 and 75 inclusively, in increments of 1. Either percent or amount discount is returned not both at the same time."
				},
				"amount": {
					"type": "number",
					"format": "double",
					"minimum": 1,
					"maximum": 12000000,
					"description": "Used for promo with amount ($) discount. Amount discount can be used only by HotelCollect-only products. Range between 1 and 12,000,000 inclusive. When creating a promotion for a HotelCollect-only rate plan, use either the percent field or the amount field, but not both at the same time."
				},
				"minLOS": {
					"type": "integer",
					"format": "int32",
					"minimum": 1,
					"maximum": 4,
					"description": "The minimum night(s) that guest must stay. The range must be between 1 and 4 inclusively."
				},
				"minAdvBookDays": {
					"type": "integer",
					"format": "int32",
					"description": "The minimum days before a travel date that the booking must take place. Optional, if not provided, means bookings can take place up until checkin day, assuming other constraints are met. The value should be a positive integer between 0 and 500."
				},
				"mobileOnly": {
					"type": "boolean",
					"description": "Boolean. Should this promotion only be displayed through mobile applications (available through smart phones and tablets)."
				},
				"score": {
					"type": "number",
					"format": "double",
					"minimum": 0,
					"maximum": 10,
					"description": "A promo score calculated by the promo service. Range between 0.0 and 10.0 inclusive. Only returned if appropriate parameter is passed in request. Cannot be specified in create or update requests."
				}
			}
		},
		"Hotel": {
			"required": [
				"id"
			],
			"properties": {
				"id": {
					"type": "integer",
					"format": "int32",
					"description": "The unique identifier for the hotel"
				}
			}
		},
		"RatePlan": {
			"required": [
				"id"
			],
			"properties": {
				"id": {
					"type": "string",
					"description": "The unique identifier for the rate plan. At least one rate plan ID for an active Expedia rate plan is required when requesting to create a promotion. Derived rate plan IDs should never be provided, as the promotion will always be attached to the parent. If a derived rate plan is provided, the promo will be created on the parent. If the same promo already exists on the parent, it will return an error."
				}
			}
		},
		"WarningType": {
			"required": [
				"code", "message"
			],
			"properties": {
				"code": {
					"type": "integer",
					"format": "int32",
					"description": "Warning code, range (7000, 7999)"
				},
				"message": {
					"type": "string",
					"description": "Warning message"
				},
				"promoId": {
					"type": "integer",
					"format": "int32",
					"description": "The unique identifier for the promo"
				},
				"link": {
					"type": "string",
					"description": "The link for the additional information related to this warning"
				}
			}
		},
		"PromoRS": {
			"properties": {
				"Entity": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/PromoType"
					}
				},
				"Warnings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/WarningType"
					}
				},
				"Errors": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ErrorType"
					}
				},
				"requestId": {
					"type": "string",
					"description": "A generated id (UUID) for tracking"
				}
			}
		}
	}
}
